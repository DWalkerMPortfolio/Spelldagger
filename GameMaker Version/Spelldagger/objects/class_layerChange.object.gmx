<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables + particles
event_inherited()

//variables
fadePlayer=noone
interactable=true
GUIAlpha[0]=0
if obj_control.players=2
    GUIAlpha[1]=0
state="unlocked"

//constants
interactRange=72
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///layer change
event_inherited()

var nearestPlayer=instance_nearest(x,y,class_player)

if point_distance(x,y,nearestPlayer.x,nearestPlayer.y)&lt;interactRange and obj_control.interactPressed[nearestPlayer.playerNumber]=true and obj_control.menuDisplay[nearestPlayer.playerNumber]=false
    {
    if state="unlocked" or obj_control.key[keyID]=true and fadePlayer=noone
        {
        fadePlayer=nearestPlayer
        obj_control.fade[fadePlayer.playerNumber]=true
        if state!="unlocked"
            {
            obj_control.displayMessage[nearestPlayer.playerNumber]=true
            obj_control.message[nearestPlayer.playerNumber]="Unlocked using "+obj_control.keyTitle[keyID]
            state="unlocked"
            }
        }
    else if keyID!=1
            {
            obj_control.displayMessage[nearestPlayer.playerNumber]=true
            obj_control.message[nearestPlayer.playerNumber]="Requires "+obj_control.keyTitle[keyID]
            }
    }

if fadePlayer!=noone and obj_control.fadeAlpha[fadePlayer.playerNumber]=1
    {
    fadePlayer.x=x+positionOffset[0]
    if dir="up"
        fadePlayer.y=y+obj_control.maxSectorY*obj_control.sectorHeight+positionOffset[1]
    else
        fadePlayer.y=y-obj_control.maxSectorY*obj_control.sectorHeight+positionOffset[1]
    fadePlayer.warped=2
    fadePlayer=noone
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///icon

if state!="unlocked"
    {
    if collision_line(x,y,obj_control.player[view_current].x,obj_control.player[view_current].y,class_wall,true,true)=noone
        {
        GUIAlpha[view_current]+=0.1
        if GUIAlpha[view_current]&gt;0.8
            GUIAlpha[view_current]=0.8
        }
    else
        {
        GUIAlpha[view_current]-=0.1
        if GUIAlpha[view_current]&lt;0
            GUIAlpha[view_current]=0
        }
    
    if GUIAlpha[view_current]&gt;0
        {  
        draw_set_alpha(GUIAlpha[view_current])
        draw_sprite(spr_lockEnchantedGUI,0,x,y)
        draw_set_alpha(1)
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
