<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables

range=0
influence=0
rangePrevious=range
surface=noone
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///delete surface

surface_free(surface)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///calculate/create/regenerate surface

//create/regenerate surface
if !surface_exists(surface)
    {
    surface=surface_create(range*2,range*2)
    initialized=true
    }

//calculate surface
loadedPlayer=scr_loadedPlayer(x,y,range*2)
if loadedPlayer&gt;=0
    {
    //check if changed
    changed=false
    if x!=xprevious or y!=yprevious or range!=rangePrevious
        {
        changed=true
        obj_control.lightChanged[loadedPlayer]=true
        }
    if obj_control.sectorChanged[loadedPlayer] or changed=true
        {
        surface_set_target(surface)
        draw_clear_alpha(c_black,0)
        draw_set_color(c_white)
        draw_ellipse_colour(0,0,range*2,range*2,c_orange,c_red,false)
        draw_set_blend_mode(bm_subtract)
        scr_shadow(x,y,x-range,y-range,x-range,y-range,range*2,range*2,false,loadedPlayer)
        surface_reset_target()
        draw_set_blend_mode(bm_normal)
        }
    }
else
    show_message("light broken spawn")
    
rangePrevious=range
influence=range


//OLD light implementation (for reference if something breaks)
/*
var playerCheck=0
for (playerCheck=0; playerCheck&lt;obj_control.players; playerCheck+=1)
    {
    if (initialized=false or obj_control.sectorChanged[playerCheck]=true)
        {
        if (generatorPowered=false or obj_control.generatorActivated[generatorArea]=true)
            {
            surface_set_target(obj_control.lightCalculateSurface)
            draw_set_color(c_white)
            draw_clear_alpha(c_black,0)
            draw_ellipse_colour(0,0,range*2,range*2,c_orange,c_red,false)
            draw_set_blend_mode(bm_subtract)
            scr_shadow(x,y,x-range,y-range,x-range,y-range,range*2,range*2,false,playerCheck)
            surface_reset_target()
            surface_set_target(obj_control.darkTextureSurface[playerCheck])
            draw_surface_ext(obj_control.lightCalculateSurface,x-range*0.975-obj_control.sectorX[playerCheck]*obj_control.sectorWidth,y-range*0.975-(obj_control.sectorY[playerCheck]+obj_control.layer[playerCheck]*obj_control.maxSectorY)*obj_control.sectorHeight,0.975,0.975,0,c_white,1)
            draw_surface_ext(obj_control.lightCalculateSurface,x-range-obj_control.sectorX[playerCheck]*obj_control.sectorWidth,y-range-(obj_control.sectorY[playerCheck]+obj_control.layer[playerCheck]*obj_control.maxSectorY)*obj_control.sectorHeight,1,1,0,c_white,0.7)
            draw_set_blend_mode(bm_normal)
            surface_reset_target()
            surface_set_target(obj_control.textureSurface[playerCheck])
            draw_surface_ext(obj_control.lightCalculateSurface,x-range-obj_control.sectorX[playerCheck]*obj_control.sectorWidth,y-range-(obj_control.sectorY[playerCheck]+obj_control.layer[playerCheck]*obj_control.maxSectorY)*obj_control.sectorHeight,1,1,0,c_white,0.025)
            surface_reset_target()
            if playerCheck&gt;=obj_control.players-1
                initialized=true
            on=true
            }
        else
            on=false
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
