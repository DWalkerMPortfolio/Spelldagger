<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables

depth=100
interacted=false
propInitialized=false
lightCollision=false
lightRecalculate=false
instanceIndex=-1
pathRow=-1
dataMap=noone
interactPlayer=noone
stabDagger=noone

//constants
interactable=false
interactRange=sprite_width+64
stabbable=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy emitter

if interactable=true
    {
    part_emitter_stream(obj_control.sys_interactable,emit_interactable,obj_control.part_interactable,0)
    part_emitter_destroy(obj_control.sys_interactable,emit_interactable)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///light collision OPTIMIZE + interaction particles

//light collision OPTIMIZE
lightCollision=scr_lightCollision(x,y)

//particles
if interactable=true and propInitialized=false
    {
    emit_interactable=part_emitter_create(obj_control.sys_interactable)
    part_emitter_region(obj_control.sys_interactable,emit_interactable,x-sprite_xoffset,x-sprite_xoffset+sprite_width,y-sprite_yoffset,y-sprite_yoffset+sprite_height,ps_shape_ellipse,ps_distr_gaussian)
    part_emitter_stream(obj_control.sys_interactable,emit_interactable,obj_control.part_interactable,-15)
    propInitialized=true
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///interaction + stabbing

//interaction
interacted=false
interactPlayer=noone
if interactable=true
    {
    for (var checkPlayerNumber=0; checkPlayerNumber&lt;obj_control.players; checkPlayerNumber+=1)
        {
        var checkPlayer=obj_control.player[checkPlayerNumber]
        if obj_control.interactPressed[checkPlayerNumber]=true and point_distance(x,y,checkPlayer.x,checkPlayer.y)&lt;interactRange and obj_control.menuDisplay[checkPlayerNumber]=false
            {
            interacted=true
            interactPlayer=checkPlayer
            }
        }
    }

//stabbing
stabbed=false
if stabbable=true
    {
    stabbed=false
    with(class_dagger)
        {
        if place_meeting(x,y,other) and (state="fire" or state="stuck")
            {
            other.stabbed=true
            other.stabDagger=self
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///grayscale

if sprite_index!=-1
    {
    if lightCollision=false
        shader_set(shd_grayscale)
    draw_self()
    if lightCollision=false
        shader_reset()
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
